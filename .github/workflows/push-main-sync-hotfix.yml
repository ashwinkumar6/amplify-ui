name: Setup hotfix branch with main

on:
  workflow_dispatch
  # push:
  #   branches: [ashwin-main]

permissions:
  contents: write # Used to push tags to GitHub
  # id-token: write # This is required for requesting the JWT

jobs:
  setup:
    runs-on: ubuntu-latest
    # outputs:
      # has-changesets: ${{ steps.has-changesets.outputs.has-changesets }}
      # has-version-packages-commit: ${{ steps.check-commit-message.outputs.has-version-packages }}
      # has-version-packages: ${{ steps.check-commit-message.outputs.has-version-packages }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@b80ff79f1755d06ba70441c368a6fe801f5f3a62 # v4.1.3 https://github.com/actions/checkout/commit/cd7d8d697e10461458bc61a30d094dc601a8b017
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Create hotfix branch
        run: |
          # Generate a unique temporary branch name
          TEMP_BRANCH_NAME="temp/hotfix-$(date +%s)"
          echo "Using branch: $TEMP_BRANCH_NAME"

          # create hotfix branch from commit hash of the latest Version Packages
          git checkout -b $TEMP_BRANCH_NAME $(git log origin/main -1 --grep='^Version Packages' --author='github-actions\[bot\]' --pretty=format:"%H")
          git push origin $TEMP_BRANCH_NAME

          # gh pr create \
          #   --base ashwin-main \
          #   --head $TEMP_BRANCH_NAME \
          #   --title "release: Merge hotfix into main" \
          #   --body "Merge the recently completed hotfix back into the main development branch. Generated by the publish-hotfix workflow."

      # - name: Check if repo has unconsumed changesets
      #   id: has-changesets
      #   uses: ./.github/actions/has-changesets
      # Note: if there are no changesets, that means that either
      #         (1) "Version Packages" PR was just merged, or
      #         (2) no commits with changesets have been merged after packages were last published.
      #
      #       In either way, we'll attempt to publish the packages. In case of (1), publish will succeed. In
      #       case of (2), `@changesets/action` will know that UI packages have already published and will
      #       skip publish.

      # - name: Check commit message for Version Packages
      #   id: check-commit-message
      #   run: |        
      #     COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
      #     echo "Commit message: $COMMIT_MESSAGE"
      #     if [[ "$COMMIT_MESSAGE" == *"Version Packages"* ]]; then
      #       echo "has-version-packages=true" >> $GITHUB_OUTPUT
      #       echo "Commit contains 'Version Packages'"
      #     else
      #       echo "has-version-packages=false" >> $GITHUB_OUTPUT
      #       echo "Commit does not contain 'Version Packages'"
      #     fi


  # setup-hotFix-branch:
  #   needs: setup
  #   if: ${{ needs.setup.outputs.has-changesets != 'true' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@b80ff79f1755d06ba70441c368a6fe801f5f3a62 # v4.1.3 https://github.com/actions/checkout/commit/cd7d8d697e10461458bc61a30d094dc601a8b017
  #       with:
  #         # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
  #         fetch-depth: 0

  #     - name: Set github commit user
  #       env:
  #         GITHUB_EMAIL: "github-actions[bot]@users.noreply.github.com"
  #         GITHUB_USER: "github-actions[bot]"
  #       run: |
  #         git config --global user.email $GITHUB_EMAIL
  #         git config --global user.name $GITHUB_USER

  #     - name: Sync hotfix branch with main
  #       run: |
  #         # First sync hotfix with main using the "theirs" strategy to resolve conflicts
  #         git fetch origin ashwin-main
  #         git checkout -b ashwin-hotfix

  #         # Use -X theirs to automatically resolve conflicts in favor of main
  #         # git merge origin/ashwin-main --no-edit -X theirs --allow-unrelated-histories
  #         # echo "MERGE COMPLETE"
  #         git push origin ashwin-hotfix -f
